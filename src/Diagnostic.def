#ifndef DIAG
#define DIAG(ID, Level, Msg)
#endif
DIAG(err_lex_illegal_char, Error, "illegal char")
DIAG(err_lex_illegal_newline_in_after_include, Error, "illegal newline in after include")
DIAG(err_lex_illegal_token_in_c, Error, "illegal token kind in c token")
DIAG(err_lex_expected_digits_after_exponent, Error, "expected digits after exponent")
DIAG(err_lex_binary_floating, Error, "binary floating point must contain exponent")
DIAG(err_lex_invalid_octal_character, Error, "invalid octal character")
DIAG(err_lex_invalid_literal_suffix, Error,"invalid literal suffix")
DIAG(err_lex_invalid_string_literal, Error,"invalid string literal")
DIAG(err_lex_invalid_char_literal, Error,"invalid char literal")
DIAG(err_lex_empty_char_literal, Error, "empty char literal")
DIAG(err_lex_invalid_escaped_char, Error, "invalid escaped char")
DIAG(warn_lex_multi_character, Warning, "multi character constant")
DIAG(err_lex_at_least_one_hexadecimal_digit_required, Error, "error at least one hexadecimal digit required")
DIAG(err_lex_at_least_one_oct_digit_required, Error, "error at least one oct digit required")
DIAG(err_lex_unclosed_char, Error, "unclosed char literal")
DIAG(err_lex_unclosed_string, Error, "unclosed string literal")
DIAG(err_lex_unclosed_block_comment, Error, "unclosed block comment")
DIAG(err_lex_unclosed_after_include, Error, "unclosed after include")
DIAG(err_lex_implicit_newline_in_char, Error, "implicit newline in char literal")
DIAG(err_lex_implicit_newline_in_string, Error, "implicit newline in string literal")
#undef DIAG